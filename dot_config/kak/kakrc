evaluate-commands %sh{
    plugins="$kak_config/plugins"
    mkdir -p "$plugins"
    [ ! -e "$plugins/plug.kak" ] && \
        git clone -q https://github.com/andreyorst/plug.kak.git "$plugins/plug.kak"
    printf "%s\n" "source '$plugins/plug.kak/rc/plug.kak'"
}
plug "andreyorst/plug.kak" noload


# Appearance
colorscheme tomorrow-night

#
# Misc
# 


set-option global tabstop 4
set-option global indentwidth 4

# Broot integration
evaluate-commands %sh{
	kcr init kakoune
}
map -docstring 'Open Broot' global normal <c-e> ': > broot<ret>'

# Relative numbers
add-highlighter global/ number-lines -relative -hlcursor

# Use system clipboard
hook global RegisterModified '"' %{ nop %sh{
	printf %s "$kak_main_reg_dquote" | wl-copy > /dev/null 2>&1 &
}}
map -docstring 'Paste after' global normal p '<a-!>wl-paste -n<ret>'
map -docstring 'Paste before' global normal P '!wl-paste -n<ret>'

#
# LSP & Completions
#

plug "kak-lsp/kak-lsp" do %{
	cargo install --locked --force --path .
}

hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
	lsp-enable-window
	lsp-auto-hover-insert-mode-enable
	# lsp-inlay-diagnostics-enable buffer
	map -docstring 'Show current line info' global user e ': lsp-hover<ret>'
}

map global user l %{: enter-user-mode lsp<ret>} -docstring "LSP mode"

hook global WinSetOption filetype=rust %{
    hook window -group semantic-tokens BufReload .* lsp-semantic-tokens
    hook window -group semantic-tokens NormalIdle .* lsp-semantic-tokens
    hook window -group semantic-tokens InsertIdle .* lsp-semantic-tokens
    hook -once -always window WinSetOption filetype=.* %{
        remove-hooks window semantic-tokens
    }
}

hook global InsertCompletionShow .* %{
    try %{
        # this command temporarily removes cursors preceded by whitespace;
        # if there are no cursors left, it raises an error, does not
        # continue to execute the mapping commands, and the error is eaten
        # by the `try` command so no warning appears.
        execute-keys -draft 'h<a-K>\h<ret>'
        map window insert <tab> <c-n>
        map window insert <s-tab> <c-p>
        hook -once -always window InsertCompletionHide .* %{
            map window insert <tab> <tab>
            map window insert <s-tab> <s-tab>
        }
    }
}


